// ZyloPress Bcrypt Security Module
import crypto from 'crypto';
import util from 'util';

const scrypt = util.promisify(crypto.scrypt);

const hash = async (password, saltRounds = 10) => {
  const salt = crypto.randomBytes(16).toString('hex');
  const derivedKey = await scrypt(password, salt, 64);
  return `${salt}:${derivedKey.toString('hex')}`;
};

const compare = async (password, hash) => {
  const [salt, key] = hash.split(':');
  const derivedKey = await scrypt(password, salt, 64);
  return key === derivedKey.toString('hex');
};

export { hash, compare };