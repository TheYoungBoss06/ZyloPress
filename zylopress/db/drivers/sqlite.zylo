// ZyloPress SQLite Driver
import sqlite3 from 'sqlite3';
import { open } from 'sqlite';

class SQLiteDriver implements DBDriver {
  var db: Any = null

  func connect(config: Map) -> Void {
    var dbPath = config.DB_PATH || './database.sqlite'

    this.db = await open({
      filename: dbPath,
      driver: sqlite3.Database
    })

    logger.info("Connected to SQLite database: " + dbPath)
  }

  func query(sql: String, params: List<Any>) -> List<Any> {
    if (!this.db) {
      throw Error("Database not connected")
    }

    return await this.db.all(sql, params)
  }

  func close() -> Void {
    if (this.db) {
      await this.db.close()
      this.db = null
      logger.info("SQLite connection closed")
    }
  }

  func getName() -> String {
    return "SQLite"
  }
}