// Lint script - Check Zylo code quality with ZPM
import { zpm } from 'zpm';

const lintFile = async (filePath) => {
  const content = await zpm.fs.readFile(filePath, 'utf8');
  const errors = [];

  // Basic Zylo checks
  if (content.includes('console.log') && !filePath.includes('logger')) {
    errors.push('Avoid console.log, use logger instead');
  }

  if (content.includes('throw new Error') && !content.includes('errorHandler')) {
    errors.push('Use structured error throwing');
  }

  return errors;
};

const lintDirectory = async (dir) => {
  const files = await zpm.fs.readdir(dir);
  let totalErrors = 0;

  for (const file of files) {
    const filePath = `${dir}/${file}`;
    const stat = await zpm.fs.stat(filePath);

    if (stat.isDirectory() && !file.startsWith('.')) {
      totalErrors += await lintDirectory(filePath);
    } else if (file.endsWith('.zylo')) {
      const errors = await lintFile(filePath);
      if (errors.length > 0) {
        console.log(`Lint errors in ${filePath}:`);
        errors.forEach(error => console.log(`  - ${error}`));
        totalErrors += errors.length;
      }
    }
  }

  return totalErrors;
};

const runLint = async () => {
  const errors = await lintDirectory('zylopress');
  if (errors === 0) {
    console.log('Lint passed!');
  } else {
    console.log(`Lint failed with ${errors} errors`);
    process.exit(1);
  }
};

runLint();